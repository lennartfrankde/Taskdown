name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [closed]

permissions:
  contents: read
  issues: write
  pull-requests: write

concurrency:
  group: pr-preview-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push PR image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/taskdown:pr-${{ github.event.number }}
            ${{ secrets.DOCKER_REGISTRY }}/taskdown:pr-${{ github.event.number }}-${{ github.sha }}

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Create or update Coolify preview
        env:
          COOLIFY_API_URL: ${{ secrets.COOLIFY_API_URL }}
          COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN }}
          COOLIFY_PROJECT_ID: ${{ secrets.COOLIFY_PROJECT_ID }}
          REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          PR_NUMBER: ${{ github.event.number }}
        run: |
          set -euo pipefail
          PREVIEW_NAME="taskdown-pr-${PR_NUMBER}"
          IMAGE="${REGISTRY}/taskdown:pr-${PR_NUMBER}"

          # Find service with matching name
          SERVICES=$(curl -s -H "Authorization: Bearer ${COOLIFY_TOKEN}" \
            "${COOLIFY_API_URL}/api/v1/projects/${COOLIFY_PROJECT_ID}/services")
          SERVICE_ID=$(echo "$SERVICES" | jq -r --arg name "$PREVIEW_NAME" '.[] | select(.name==$name) | .id')

          if [ -n "$SERVICE_ID" ] && [ "$SERVICE_ID" != "null" ]; then
            echo "Updating existing Coolify preview service: $PREVIEW_NAME"
            curl -s -X PATCH "${COOLIFY_API_URL}/api/v1/services/${SERVICE_ID}" \
              -H "Authorization: Bearer ${COOLIFY_TOKEN}" \
              -H "Content-Type: application/json" \
              -d "{\"image\":\"${IMAGE}\",\"preview\":true,\"forcePullImage\":true}"
          else
            echo "Creating new Coolify preview service: $PREVIEW_NAME"
            curl -s -X POST "${COOLIFY_API_URL}/api/v1/projects/${COOLIFY_PROJECT_ID}/services" \
              -H "Authorization: Bearer ${COOLIFY_TOKEN}" \
              -H "Content-Type: application/json" \
              -d "{\"name\":\"${PREVIEW_NAME}\",\"image\":\"${IMAGE}\",\"type\":\"service\",\"preview\":true,\"forcePullImage\":true}"
          fi

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview deployed: https://taskdown-pr-${context.issue.number}.your-domain.com`
            })

  cleanup-preview:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'

    steps:
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Delete Coolify preview
        env:
          COOLIFY_API_URL: ${{ secrets.COOLIFY_API_URL }}
          COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN }}
          COOLIFY_PROJECT_ID: ${{ secrets.COOLIFY_PROJECT_ID }}
          PR_NUMBER: ${{ github.event.number }}
        run: |
          set -euo pipefail
          PREVIEW_NAME="taskdown-pr-${PR_NUMBER}"

          SERVICES=$(curl -s -H "Authorization: Bearer ${COOLIFY_TOKEN}" \
            "${COOLIFY_API_URL}/api/v1/projects/${COOLIFY_PROJECT_ID}/services")
          SERVICE_ID=$(echo "$SERVICES" | jq -r --arg name "$PREVIEW_NAME" '.[] | select(.name==$name) | .id')

          if [ -n "$SERVICE_ID" ] && [ "$SERVICE_ID" != "null" ]; then
            echo "Deleting Coolify preview service: $PREVIEW_NAME"
            curl -s -X DELETE "${COOLIFY_API_URL}/api/v1/services/${SERVICE_ID}" \
              -H "Authorization: Bearer ${COOLIFY_TOKEN}"
          else
            echo "No preview service found for $PREVIEW_NAME"
          fi

      - name: Comment PR about cleanup
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ§¹ Preview deployment removed.'
            })
